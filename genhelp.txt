CAPABILITY = (( m_arrives__g_c_s = { 
EVENTS = { 
1 = ( PRE = -at_m AND POSSIBLE [m] (TRUE)  AND at_g AND POSSIBLE [g] (TRUE) AND at_c AND POSSIBLE [c] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {at_m}) 
 }, 
EDGES = { 
(m,{-(1,1)}),
(g,{-(1,1)}),
(c,{-(1,1)}),
(s,{-(1,1)})
},
DES = {1}}), 
m, c25),
CAPABILITY = (( m_arrives__g = { 
EVENTS = { 
1 = ( PRE = -at_m AND POSSIBLE [m] (TRUE)  AND at_g AND POSSIBLE [g] (TRUE), POST = {at_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(c,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
m, c25),
CAPABILITY = (( m_arrives__g_c = { 
EVENTS = { 
1 = ( PRE = -at_m AND POSSIBLE [m] (TRUE)  AND at_g AND POSSIBLE [g] (TRUE) AND at_c AND POSSIBLE [c] (TRUE), POST = {at_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
m, c25),
CAPABILITY = (( m_arrives__g_c_s = { 
EVENTS = { 
1 = ( PRE = -at_m AND POSSIBLE [m] (TRUE)  AND at_g AND POSSIBLE [g] (TRUE) AND at_c AND POSSIBLE [c] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {at_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)})
},
DES = {1}}), 
m, c25),
CAPABILITY = (( m_arrives__c = { 
EVENTS = { 
1 = ( PRE = -at_m AND POSSIBLE [m] (TRUE)  AND at_c AND POSSIBLE [c] (TRUE), POST = {at_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(g,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
m, c25),
CAPABILITY = (( m_arrives__c_s = { 
EVENTS = { 
1 = ( PRE = -at_m AND POSSIBLE [m] (TRUE)  AND at_c AND POSSIBLE [c] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {at_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)}),
(g,{-(1,2),-(2,2)})
},
DES = {1}}), 
m, c25),
CAPABILITY = (( m_arrives__s = { 
EVENTS = { 
1 = ( PRE = -at_m AND POSSIBLE [m] (TRUE)  AND at_s AND POSSIBLE [s] (TRUE), POST = {at_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)}),
(g,{-(1,2),-(2,2)}),
(c,{-(1,2),-(2,2)})
},
DES = {1}}), 
m, c25),
CAPABILITY = (( m_arrives__ = { 
EVENTS = { 
1 = ( PRE = -at_m AND POSSIBLE [m] (TRUE) , POST = {at_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(g,{-(1,2),-(2,2)}),
(c,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
m, c25),CAPABILITY = (( g_arrives__m_c_s = { 
EVENTS = { 
1 = ( PRE = -at_g AND POSSIBLE [g] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_c AND POSSIBLE [c] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {at_g}) 
 }, 
EDGES = { 
(g,{-(1,1)}),
(m,{-(1,1)}),
(c,{-(1,1)}),
(s,{-(1,1)})
},
DES = {1}}), 
g, c3),
CAPABILITY = (( g_arrives__m = { 
EVENTS = { 
1 = ( PRE = -at_g AND POSSIBLE [g] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE), POST = {at_g}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(g,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(c,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
g, c3),
CAPABILITY = (( g_arrives__m_c = { 
EVENTS = { 
1 = ( PRE = -at_g AND POSSIBLE [g] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_c AND POSSIBLE [c] (TRUE), POST = {at_g}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(g,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
g, c3),
CAPABILITY = (( g_arrives__m_c_s = { 
EVENTS = { 
1 = ( PRE = -at_g AND POSSIBLE [g] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_c AND POSSIBLE [c] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {at_g}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(g,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)})
},
DES = {1}}), 
g, c3),
CAPABILITY = (( g_arrives__c = { 
EVENTS = { 
1 = ( PRE = -at_g AND POSSIBLE [g] (TRUE)  AND at_c AND POSSIBLE [c] (TRUE), POST = {at_g}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(g,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
g, c3),
CAPABILITY = (( g_arrives__c_s = { 
EVENTS = { 
1 = ( PRE = -at_g AND POSSIBLE [g] (TRUE)  AND at_c AND POSSIBLE [c] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {at_g}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(g,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)})
},
DES = {1}}), 
g, c3),
CAPABILITY = (( g_arrives__s = { 
EVENTS = { 
1 = ( PRE = -at_g AND POSSIBLE [g] (TRUE)  AND at_s AND POSSIBLE [s] (TRUE), POST = {at_g}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(g,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(c,{-(1,2),-(2,2)})
},
DES = {1}}), 
g, c3),
CAPABILITY = (( g_arrives__ = { 
EVENTS = { 
1 = ( PRE = -at_g AND POSSIBLE [g] (TRUE) , POST = {at_g}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(g,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(c,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
g, c3),CAPABILITY = (( c_arrives__m_g_s = { 
EVENTS = { 
1 = ( PRE = -at_c AND POSSIBLE [c] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_g AND POSSIBLE [g] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {at_c}) 
 }, 
EDGES = { 
(c,{-(1,1)}),
(m,{-(1,1)}),
(g,{-(1,1)}),
(s,{-(1,1)})
},
DES = {1}}), 
c, c3),
CAPABILITY = (( c_arrives__m = { 
EVENTS = { 
1 = ( PRE = -at_c AND POSSIBLE [c] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE), POST = {at_c}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(c,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(g,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
c, c3),
CAPABILITY = (( c_arrives__m_g = { 
EVENTS = { 
1 = ( PRE = -at_c AND POSSIBLE [c] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_g AND POSSIBLE [g] (TRUE), POST = {at_c}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(c,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
c, c3),
CAPABILITY = (( c_arrives__m_g_s = { 
EVENTS = { 
1 = ( PRE = -at_c AND POSSIBLE [c] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_g AND POSSIBLE [g] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {at_c}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(c,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)})
},
DES = {1}}), 
c, c3),
CAPABILITY = (( c_arrives__g = { 
EVENTS = { 
1 = ( PRE = -at_c AND POSSIBLE [c] (TRUE)  AND at_g AND POSSIBLE [g] (TRUE), POST = {at_c}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(c,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
c, c3),
CAPABILITY = (( c_arrives__g_s = { 
EVENTS = { 
1 = ( PRE = -at_c AND POSSIBLE [c] (TRUE)  AND at_g AND POSSIBLE [g] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {at_c}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(c,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)})
},
DES = {1}}), 
c, c3),
CAPABILITY = (( c_arrives__s = { 
EVENTS = { 
1 = ( PRE = -at_c AND POSSIBLE [c] (TRUE)  AND at_s AND POSSIBLE [s] (TRUE), POST = {at_c}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(c,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(g,{-(1,2),-(2,2)})
},
DES = {1}}), 
c, c3),
CAPABILITY = (( c_arrives__ = { 
EVENTS = { 
1 = ( PRE = -at_c AND POSSIBLE [c] (TRUE) , POST = {at_c}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(c,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(g,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
c, c3),CAPABILITY = (( s_arrives__m_g_c = { 
EVENTS = { 
1 = ( PRE = -at_s AND POSSIBLE [s] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_g AND POSSIBLE [g] (TRUE) AND at_c AND POSSIBLE [c] (TRUE), POST = {at_s}) 
 }, 
EDGES = { 
(s,{-(1,1)}),
(m,{-(1,1)}),
(g,{-(1,1)}),
(c,{-(1,1)})
},
DES = {1}}), 
s, c2),
CAPABILITY = (( s_arrives__m = { 
EVENTS = { 
1 = ( PRE = -at_s AND POSSIBLE [s] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE), POST = {at_s}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(s,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(g,{-(1,2),-(2,2)}),
(c,{-(1,2),-(2,2)})
},
DES = {1}}), 
s, c2),
CAPABILITY = (( s_arrives__m_g = { 
EVENTS = { 
1 = ( PRE = -at_s AND POSSIBLE [s] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_g AND POSSIBLE [g] (TRUE), POST = {at_s}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(s,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(c,{-(1,2),-(2,2)})
},
DES = {1}}), 
s, c2),
CAPABILITY = (( s_arrives__m_g_c = { 
EVENTS = { 
1 = ( PRE = -at_s AND POSSIBLE [s] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_g AND POSSIBLE [g] (TRUE) AND at_c AND POSSIBLE [c] (TRUE), POST = {at_s}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(s,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)})
},
DES = {1}}), 
s, c2),
CAPABILITY = (( s_arrives__g = { 
EVENTS = { 
1 = ( PRE = -at_s AND POSSIBLE [s] (TRUE)  AND at_g AND POSSIBLE [g] (TRUE), POST = {at_s}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(s,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(c,{-(1,2),-(2,2)})
},
DES = {1}}), 
s, c2),
CAPABILITY = (( s_arrives__g_c = { 
EVENTS = { 
1 = ( PRE = -at_s AND POSSIBLE [s] (TRUE)  AND at_g AND POSSIBLE [g] (TRUE) AND at_c AND POSSIBLE [c] (TRUE), POST = {at_s}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(s,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)})
},
DES = {1}}), 
s, c2),
CAPABILITY = (( s_arrives__c = { 
EVENTS = { 
1 = ( PRE = -at_s AND POSSIBLE [s] (TRUE)  AND at_c AND POSSIBLE [c] (TRUE), POST = {at_s}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(s,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(g,{-(1,2),-(2,2)})
},
DES = {1}}), 
s, c2),
CAPABILITY = (( s_arrives__ = { 
EVENTS = { 
1 = ( PRE = -at_s AND POSSIBLE [s] (TRUE) , POST = {at_s}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(s,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(g,{-(1,2),-(2,2)}),
(c,{-(1,2),-(2,2)})
},
DES = {1}}), 
s, c2),CAPABILITY = (( m_flee__g_c_s = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [m] (th_m)) AND at_m AND POSSIBLE [m] (TRUE)  AND at_g AND POSSIBLE [g] (TRUE) AND at_c AND POSSIBLE [c] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {-at_m}) 
 }, 
EDGES = { 
(m,{-(1,1)}),
(g,{-(1,1)}),
(c,{-(1,1)}),
(s,{-(1,1)})
},
DES = {1}}), 
m, c25),
CAPABILITY = (( m_flee__g = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [m] (th_m)) AND at_m AND POSSIBLE [m] (TRUE)  AND at_g AND POSSIBLE [g] (TRUE), POST = {-at_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(c,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
m, c25),
CAPABILITY = (( m_flee__g_c = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [m] (th_m)) AND at_m AND POSSIBLE [m] (TRUE)  AND at_g AND POSSIBLE [g] (TRUE) AND at_c AND POSSIBLE [c] (TRUE), POST = {-at_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
m, c25),
CAPABILITY = (( m_flee__g_c_s = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [m] (th_m)) AND at_m AND POSSIBLE [m] (TRUE)  AND at_g AND POSSIBLE [g] (TRUE) AND at_c AND POSSIBLE [c] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {-at_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)})
},
DES = {1}}), 
m, c25),
CAPABILITY = (( m_flee__c = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [m] (th_m)) AND at_m AND POSSIBLE [m] (TRUE)  AND at_c AND POSSIBLE [c] (TRUE), POST = {-at_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(g,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
m, c25),
CAPABILITY = (( m_flee__c_s = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [m] (th_m)) AND at_m AND POSSIBLE [m] (TRUE)  AND at_c AND POSSIBLE [c] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {-at_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)}),
(g,{-(1,2),-(2,2)})
},
DES = {1}}), 
m, c25),
CAPABILITY = (( m_flee__s = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [m] (th_m)) AND at_m AND POSSIBLE [m] (TRUE)  AND at_s AND POSSIBLE [s] (TRUE), POST = {-at_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)}),
(g,{-(1,2),-(2,2)}),
(c,{-(1,2),-(2,2)})
},
DES = {1}}), 
m, c25),
CAPABILITY = (( m_flee__ = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [m] (th_m)) AND at_m AND POSSIBLE [m] (TRUE) , POST = {-at_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(g,{-(1,2),-(2,2)}),
(c,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
m, c25),CAPABILITY = (( g_flee__m_c_s = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [g] (th_g)) AND at_g AND POSSIBLE [g] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_c AND POSSIBLE [c] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {-at_g}) 
 }, 
EDGES = { 
(g,{-(1,1)}),
(m,{-(1,1)}),
(c,{-(1,1)}),
(s,{-(1,1)})
},
DES = {1}}), 
g, c5),
CAPABILITY = (( g_flee__m = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [g] (th_g)) AND at_g AND POSSIBLE [g] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE), POST = {-at_g}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(g,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(c,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
g, c5),
CAPABILITY = (( g_flee__m_c = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [g] (th_g)) AND at_g AND POSSIBLE [g] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_c AND POSSIBLE [c] (TRUE), POST = {-at_g}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(g,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
g, c5),
CAPABILITY = (( g_flee__m_c_s = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [g] (th_g)) AND at_g AND POSSIBLE [g] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_c AND POSSIBLE [c] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {-at_g}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(g,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)})
},
DES = {1}}), 
g, c5),
CAPABILITY = (( g_flee__c = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [g] (th_g)) AND at_g AND POSSIBLE [g] (TRUE)  AND at_c AND POSSIBLE [c] (TRUE), POST = {-at_g}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(g,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
g, c5),
CAPABILITY = (( g_flee__c_s = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [g] (th_g)) AND at_g AND POSSIBLE [g] (TRUE)  AND at_c AND POSSIBLE [c] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {-at_g}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(g,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)})
},
DES = {1}}), 
g, c5),
CAPABILITY = (( g_flee__s = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [g] (th_g)) AND at_g AND POSSIBLE [g] (TRUE)  AND at_s AND POSSIBLE [s] (TRUE), POST = {-at_g}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(g,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(c,{-(1,2),-(2,2)})
},
DES = {1}}), 
g, c5),
CAPABILITY = (( g_flee__ = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [g] (th_g)) AND at_g AND POSSIBLE [g] (TRUE) , POST = {-at_g}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(g,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(c,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
g, c5),CAPABILITY = (( c_flee__m_g_s = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [c] (th_c)) AND at_c AND POSSIBLE [c] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_g AND POSSIBLE [g] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {-at_c}) 
 }, 
EDGES = { 
(c,{-(1,1)}),
(m,{-(1,1)}),
(g,{-(1,1)}),
(s,{-(1,1)})
},
DES = {1}}), 
c, c5),
CAPABILITY = (( c_flee__m = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [c] (th_c)) AND at_c AND POSSIBLE [c] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE), POST = {-at_c}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(c,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(g,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
c, c5),
CAPABILITY = (( c_flee__m_g = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [c] (th_c)) AND at_c AND POSSIBLE [c] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_g AND POSSIBLE [g] (TRUE), POST = {-at_c}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(c,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
c, c5),
CAPABILITY = (( c_flee__m_g_s = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [c] (th_c)) AND at_c AND POSSIBLE [c] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_g AND POSSIBLE [g] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {-at_c}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(c,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)})
},
DES = {1}}), 
c, c5),
CAPABILITY = (( c_flee__g = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [c] (th_c)) AND at_c AND POSSIBLE [c] (TRUE)  AND at_g AND POSSIBLE [g] (TRUE), POST = {-at_c}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(c,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
c, c5),
CAPABILITY = (( c_flee__g_s = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [c] (th_c)) AND at_c AND POSSIBLE [c] (TRUE)  AND at_g AND POSSIBLE [g] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {-at_c}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(c,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)})
},
DES = {1}}), 
c, c5),
CAPABILITY = (( c_flee__s = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [c] (th_c)) AND at_c AND POSSIBLE [c] (TRUE)  AND at_s AND POSSIBLE [s] (TRUE), POST = {-at_c}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(c,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(g,{-(1,2),-(2,2)})
},
DES = {1}}), 
c, c5),
CAPABILITY = (( c_flee__ = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [c] (th_c)) AND at_c AND POSSIBLE [c] (TRUE) , POST = {-at_c}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(c,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(g,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
c, c5),CAPABILITY = (( s_flee__m_g_c = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [s] (th_s)) AND at_s AND POSSIBLE [s] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_g AND POSSIBLE [g] (TRUE) AND at_c AND POSSIBLE [c] (TRUE), POST = {-at_s}) 
 }, 
EDGES = { 
(s,{-(1,1)}),
(m,{-(1,1)}),
(g,{-(1,1)}),
(c,{-(1,1)})
},
DES = {1}}), 
s, c3),
CAPABILITY = (( s_flee__m = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [s] (th_s)) AND at_s AND POSSIBLE [s] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE), POST = {-at_s}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(s,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(g,{-(1,2),-(2,2)}),
(c,{-(1,2),-(2,2)})
},
DES = {1}}), 
s, c3),
CAPABILITY = (( s_flee__m_g = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [s] (th_s)) AND at_s AND POSSIBLE [s] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_g AND POSSIBLE [g] (TRUE), POST = {-at_s}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(s,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(c,{-(1,2),-(2,2)})
},
DES = {1}}), 
s, c3),
CAPABILITY = (( s_flee__m_g_c = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [s] (th_s)) AND at_s AND POSSIBLE [s] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_g AND POSSIBLE [g] (TRUE) AND at_c AND POSSIBLE [c] (TRUE), POST = {-at_s}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(s,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)})
},
DES = {1}}), 
s, c3),
CAPABILITY = (( s_flee__g = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [s] (th_s)) AND at_s AND POSSIBLE [s] (TRUE)  AND at_g AND POSSIBLE [g] (TRUE), POST = {-at_s}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(s,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(c,{-(1,2),-(2,2)})
},
DES = {1}}), 
s, c3),
CAPABILITY = (( s_flee__g_c = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [s] (th_s)) AND at_s AND POSSIBLE [s] (TRUE)  AND at_g AND POSSIBLE [g] (TRUE) AND at_c AND POSSIBLE [c] (TRUE), POST = {-at_s}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(s,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)})
},
DES = {1}}), 
s, c3),
CAPABILITY = (( s_flee__c = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [s] (th_s)) AND at_s AND POSSIBLE [s] (TRUE)  AND at_c AND POSSIBLE [c] (TRUE), POST = {-at_s}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(s,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(g,{-(1,2),-(2,2)})
},
DES = {1}}), 
s, c3),
CAPABILITY = (( s_flee__ = { 
EVENTS = { 
1 = ( PRE = (BELIEVES [s] (th_s)) AND at_s AND POSSIBLE [s] (TRUE) , POST = {-at_s}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(s,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(g,{-(1,2),-(2,2)}),
(c,{-(1,2),-(2,2)})
},
DES = {1}}), 
s, c3),CAPABILITY = (( m_leaves__g_c_s = { 
EVENTS = { 
1 = ( PRE = at_m AND POSSIBLE [m] (TRUE)  AND at_g AND POSSIBLE [g] (TRUE) AND at_c AND POSSIBLE [c] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {-at_m}) 
 }, 
EDGES = { 
(m,{-(1,1)}),
(g,{-(1,1)}),
(c,{-(1,1)}),
(s,{-(1,1)})
},
DES = {1}}), 
m, c25),
CAPABILITY = (( m_leaves__g = { 
EVENTS = { 
1 = ( PRE = at_m AND POSSIBLE [m] (TRUE)  AND at_g AND POSSIBLE [g] (TRUE), POST = {-at_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(c,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
m, c25),
CAPABILITY = (( m_leaves__g_c = { 
EVENTS = { 
1 = ( PRE = at_m AND POSSIBLE [m] (TRUE)  AND at_g AND POSSIBLE [g] (TRUE) AND at_c AND POSSIBLE [c] (TRUE), POST = {-at_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
m, c25),
CAPABILITY = (( m_leaves__g_c_s = { 
EVENTS = { 
1 = ( PRE = at_m AND POSSIBLE [m] (TRUE)  AND at_g AND POSSIBLE [g] (TRUE) AND at_c AND POSSIBLE [c] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {-at_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)})
},
DES = {1}}), 
m, c25),
CAPABILITY = (( m_leaves__c = { 
EVENTS = { 
1 = ( PRE = at_m AND POSSIBLE [m] (TRUE)  AND at_c AND POSSIBLE [c] (TRUE), POST = {-at_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(g,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
m, c25),
CAPABILITY = (( m_leaves__c_s = { 
EVENTS = { 
1 = ( PRE = at_m AND POSSIBLE [m] (TRUE)  AND at_c AND POSSIBLE [c] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {-at_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)}),
(g,{-(1,2),-(2,2)})
},
DES = {1}}), 
m, c25),
CAPABILITY = (( m_leaves__s = { 
EVENTS = { 
1 = ( PRE = at_m AND POSSIBLE [m] (TRUE)  AND at_s AND POSSIBLE [s] (TRUE), POST = {-at_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)}),
(g,{-(1,2),-(2,2)}),
(c,{-(1,2),-(2,2)})
},
DES = {1}}), 
m, c25),
CAPABILITY = (( m_leaves__ = { 
EVENTS = { 
1 = at_m AND POSSIBLE [m] (TRUE) , POST = {-at_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(g,{-(1,2),-(2,2)}),
(c,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
m, c25),CAPABILITY = (( g_leaves__m_c_s = { 
EVENTS = { 
1 = ( PRE = at_g AND POSSIBLE [g] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_c AND POSSIBLE [c] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {-at_g}) 
 }, 
EDGES = { 
(g,{-(1,1)}),
(m,{-(1,1)}),
(c,{-(1,1)}),
(s,{-(1,1)})
},
DES = {1}}), 
g, c3),
CAPABILITY = (( g_leaves__m = { 
EVENTS = { 
1 = ( PRE = at_g AND POSSIBLE [g] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE), POST = {-at_g}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(g,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(c,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
g, c3),
CAPABILITY = (( g_leaves__m_c = { 
EVENTS = { 
1 = ( PRE = at_g AND POSSIBLE [g] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_c AND POSSIBLE [c] (TRUE), POST = {-at_g}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(g,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
g, c3),
CAPABILITY = (( g_leaves__m_c_s = { 
EVENTS = { 
1 = ( PRE = at_g AND POSSIBLE [g] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_c AND POSSIBLE [c] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {-at_g}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(g,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)})
},
DES = {1}}), 
g, c3),
CAPABILITY = (( g_leaves__c = { 
EVENTS = { 
1 = ( PRE = at_g AND POSSIBLE [g] (TRUE)  AND at_c AND POSSIBLE [c] (TRUE), POST = {-at_g}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(g,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
g, c3),
CAPABILITY = (( g_leaves__c_s = { 
EVENTS = { 
1 = ( PRE = at_g AND POSSIBLE [g] (TRUE)  AND at_c AND POSSIBLE [c] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {-at_g}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(g,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)})
},
DES = {1}}), 
g, c3),
CAPABILITY = (( g_leaves__s = { 
EVENTS = { 
1 = ( PRE = at_g AND POSSIBLE [g] (TRUE)  AND at_s AND POSSIBLE [s] (TRUE), POST = {-at_g}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(g,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(c,{-(1,2),-(2,2)})
},
DES = {1}}), 
g, c3),
CAPABILITY = (( g_leaves__ = { 
EVENTS = { 
1 = at_g AND POSSIBLE [g] (TRUE) , POST = {-at_g}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(g,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(c,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
g, c3),CAPABILITY = (( c_leaves__m_g_s = { 
EVENTS = { 
1 = ( PRE = at_c AND POSSIBLE [c] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_g AND POSSIBLE [g] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {-at_c}) 
 }, 
EDGES = { 
(c,{-(1,1)}),
(m,{-(1,1)}),
(g,{-(1,1)}),
(s,{-(1,1)})
},
DES = {1}}), 
c, c3),
CAPABILITY = (( c_leaves__m = { 
EVENTS = { 
1 = ( PRE = at_c AND POSSIBLE [c] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE), POST = {-at_c}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(c,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(g,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
c, c3),
CAPABILITY = (( c_leaves__m_g = { 
EVENTS = { 
1 = ( PRE = at_c AND POSSIBLE [c] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_g AND POSSIBLE [g] (TRUE), POST = {-at_c}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(c,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
c, c3),
CAPABILITY = (( c_leaves__m_g_s = { 
EVENTS = { 
1 = ( PRE = at_c AND POSSIBLE [c] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_g AND POSSIBLE [g] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {-at_c}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(c,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)})
},
DES = {1}}), 
c, c3),
CAPABILITY = (( c_leaves__g = { 
EVENTS = { 
1 = ( PRE = at_c AND POSSIBLE [c] (TRUE)  AND at_g AND POSSIBLE [g] (TRUE), POST = {-at_c}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(c,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
c, c3),
CAPABILITY = (( c_leaves__g_s = { 
EVENTS = { 
1 = ( PRE = at_c AND POSSIBLE [c] (TRUE)  AND at_g AND POSSIBLE [g] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {-at_c}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(c,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)})
},
DES = {1}}), 
c, c3),
CAPABILITY = (( c_leaves__s = { 
EVENTS = { 
1 = ( PRE = at_c AND POSSIBLE [c] (TRUE)  AND at_s AND POSSIBLE [s] (TRUE), POST = {-at_c}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(c,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(g,{-(1,2),-(2,2)})
},
DES = {1}}), 
c, c3),
CAPABILITY = (( c_leaves__ = { 
EVENTS = { 
1 = at_c AND POSSIBLE [c] (TRUE) , POST = {-at_c}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(c,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(g,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
c, c3),CAPABILITY = (( s_leaves__m_g_c = { 
EVENTS = { 
1 = ( PRE = at_s AND POSSIBLE [s] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_g AND POSSIBLE [g] (TRUE) AND at_c AND POSSIBLE [c] (TRUE), POST = {-at_s}) 
 }, 
EDGES = { 
(s,{-(1,1)}),
(m,{-(1,1)}),
(g,{-(1,1)}),
(c,{-(1,1)})
},
DES = {1}}), 
s, c2),
CAPABILITY = (( s_leaves__m = { 
EVENTS = { 
1 = ( PRE = at_s AND POSSIBLE [s] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE), POST = {-at_s}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(s,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(g,{-(1,2),-(2,2)}),
(c,{-(1,2),-(2,2)})
},
DES = {1}}), 
s, c2),
CAPABILITY = (( s_leaves__m_g = { 
EVENTS = { 
1 = ( PRE = at_s AND POSSIBLE [s] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_g AND POSSIBLE [g] (TRUE), POST = {-at_s}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(s,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(c,{-(1,2),-(2,2)})
},
DES = {1}}), 
s, c2),
CAPABILITY = (( s_leaves__m_g_c = { 
EVENTS = { 
1 = ( PRE = at_s AND POSSIBLE [s] (TRUE)  AND at_m AND POSSIBLE [m] (TRUE) AND at_g AND POSSIBLE [g] (TRUE) AND at_c AND POSSIBLE [c] (TRUE), POST = {-at_s}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(s,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)})
},
DES = {1}}), 
s, c2),
CAPABILITY = (( s_leaves__g = { 
EVENTS = { 
1 = ( PRE = at_s AND POSSIBLE [s] (TRUE)  AND at_g AND POSSIBLE [g] (TRUE), POST = {-at_s}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(s,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(c,{-(1,2),-(2,2)})
},
DES = {1}}), 
s, c2),
CAPABILITY = (( s_leaves__g_c = { 
EVENTS = { 
1 = ( PRE = at_s AND POSSIBLE [s] (TRUE)  AND at_g AND POSSIBLE [g] (TRUE) AND at_c AND POSSIBLE [c] (TRUE), POST = {-at_s}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(s,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)})
},
DES = {1}}), 
s, c2),
CAPABILITY = (( s_leaves__c = { 
EVENTS = { 
1 = ( PRE = at_s AND POSSIBLE [s] (TRUE)  AND at_c AND POSSIBLE [c] (TRUE), POST = {-at_s}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(s,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(g,{-(1,2),-(2,2)})
},
DES = {1}}), 
s, c2),
CAPABILITY = (( s_leaves__ = { 
EVENTS = { 
1 = at_s AND POSSIBLE [s] (TRUE) , POST = {-at_s}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(s,{-(1,1),-(2,2)}),
(m,{-(1,2),-(2,2)}),
(g,{-(1,2),-(2,2)}),
(c,{-(1,2),-(2,2)})
},
DES = {1}}), 
s, c2),CAPABILITY = (( m_eats_g__c_s = { 
EVENTS = { 
1 = ( PRE = predator_m_g AND -friends_g_m AND at_m AND POSSIBLE [m] (TRUE) AND at_g AND POSSIBLE [g] (TRUE) AND hungry_m AND at_c AND POSSIBLE [c] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {-hungry_m}) 
 }, 
EDGES = { 
(m,{-(1,1)}),
(g,{-(1,1)}),
(c,{-(1,1)}),
(s,{-(1,1)})
} 
 DELEDGES = {
 (g,{-(1,1)})
} ,
DES = {1}}), 
m, c20),
CAPABILITY = (( m_eats_g__c = { 
EVENTS = { 
1 = ( PRE = predator_m_g AND -friends_g_m AND at_m AND POSSIBLE [m] (TRUE) AND at_g AND POSSIBLE [g] (TRUE) AND hungry_m AND at_c AND POSSIBLE [c] (TRUE), POST = {-hungry_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(s,{-(1,2),-(2,2)})
} 
 DELEDGES = {
 (g,{-(1,1)})
} ,
DES = {1}}), 
m, c20),
CAPABILITY = (( m_eats_g__c_s = { 
EVENTS = { 
1 = ( PRE = predator_m_g AND -friends_g_m AND at_m AND POSSIBLE [m] (TRUE) AND at_g AND POSSIBLE [g] (TRUE) AND hungry_m AND at_c AND POSSIBLE [c] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {-hungry_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)})
} 
 DELEDGES = {
 (g,{-(1,1)})
} ,
DES = {1}}), 
m, c20),
CAPABILITY = (( m_eats_g__s = { 
EVENTS = { 
1 = ( PRE = predator_m_g AND -friends_g_m AND at_m AND POSSIBLE [m] (TRUE) AND at_g AND POSSIBLE [g] (TRUE) AND hungry_m AND at_s AND POSSIBLE [s] (TRUE), POST = {-hungry_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)}),
(c,{-(1,2),-(2,2)})
} 
 DELEDGES = {
 (g,{-(1,1)})
} ,
DES = {1}}), 
m, c20),
CAPABILITY = (( m_eats_g__s = { 
EVENTS = { 
1 = ( PRE = predator_m_g AND -friends_g_m AND at_m AND POSSIBLE [m] (TRUE) AND at_g AND POSSIBLE [g] (TRUE) AND hungry_m, POST = {-hungry_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(c,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
} 
 DELEDGES = {
 (g,{-(1,1)})
} ,
DES = {1}}), 
m, c20),CAPABILITY = (( m_eats_c__g_s = { 
EVENTS = { 
1 = ( PRE = predator_m_c AND -friends_c_m AND at_m AND POSSIBLE [m] (TRUE) AND at_c AND POSSIBLE [c] (TRUE) AND hungry_m AND at_g AND POSSIBLE [g] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {-hungry_m}) 
 }, 
EDGES = { 
(m,{-(1,1)}),
(c,{-(1,1)}),
(g,{-(1,1)}),
(s,{-(1,1)})
} 
 DELEDGES = {
 (c,{-(1,1)})
} ,
DES = {1}}), 
m, c20),
CAPABILITY = (( m_eats_c__g = { 
EVENTS = { 
1 = ( PRE = predator_m_c AND -friends_c_m AND at_m AND POSSIBLE [m] (TRUE) AND at_c AND POSSIBLE [c] (TRUE) AND hungry_m AND at_g AND POSSIBLE [g] (TRUE), POST = {-hungry_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(s,{-(1,2),-(2,2)})
} 
 DELEDGES = {
 (c,{-(1,1)})
} ,
DES = {1}}), 
m, c20),
CAPABILITY = (( m_eats_c__g_s = { 
EVENTS = { 
1 = ( PRE = predator_m_c AND -friends_c_m AND at_m AND POSSIBLE [m] (TRUE) AND at_c AND POSSIBLE [c] (TRUE) AND hungry_m AND at_g AND POSSIBLE [g] (TRUE) AND at_s AND POSSIBLE [s] (TRUE), POST = {-hungry_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)})
} 
 DELEDGES = {
 (c,{-(1,1)})
} ,
DES = {1}}), 
m, c20),
CAPABILITY = (( m_eats_c__s = { 
EVENTS = { 
1 = ( PRE = predator_m_c AND -friends_c_m AND at_m AND POSSIBLE [m] (TRUE) AND at_c AND POSSIBLE [c] (TRUE) AND hungry_m AND at_s AND POSSIBLE [s] (TRUE), POST = {-hungry_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)}),
(g,{-(1,2),-(2,2)})
} 
 DELEDGES = {
 (c,{-(1,1)})
} ,
DES = {1}}), 
m, c20),
CAPABILITY = (( m_eats_c__s = { 
EVENTS = { 
1 = ( PRE = predator_m_c AND -friends_c_m AND at_m AND POSSIBLE [m] (TRUE) AND at_c AND POSSIBLE [c] (TRUE) AND hungry_m, POST = {-hungry_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(g,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
} 
 DELEDGES = {
 (c,{-(1,1)})
} ,
DES = {1}}), 
m, c20),CAPABILITY = (( m_eats_s__g_c = { 
EVENTS = { 
1 = ( PRE = predator_m_s AND -friends_s_m AND at_m AND POSSIBLE [m] (TRUE) AND at_s AND POSSIBLE [s] (TRUE) AND hungry_m AND at_g AND POSSIBLE [g] (TRUE) AND at_c AND POSSIBLE [c] (TRUE), POST = {-hungry_m}) 
 }, 
EDGES = { 
(m,{-(1,1)}),
(s,{-(1,1)}),
(g,{-(1,1)}),
(c,{-(1,1)})
} 
 DELEDGES = {
 (s,{-(1,1)})
} ,
DES = {1}}), 
m, c20),
CAPABILITY = (( m_eats_s__g = { 
EVENTS = { 
1 = ( PRE = predator_m_s AND -friends_s_m AND at_m AND POSSIBLE [m] (TRUE) AND at_s AND POSSIBLE [s] (TRUE) AND hungry_m AND at_g AND POSSIBLE [g] (TRUE), POST = {-hungry_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(c,{-(1,2),-(2,2)})
} 
 DELEDGES = {
 (s,{-(1,1)})
} ,
DES = {1}}), 
m, c20),
CAPABILITY = (( m_eats_s__g_c = { 
EVENTS = { 
1 = ( PRE = predator_m_s AND -friends_s_m AND at_m AND POSSIBLE [m] (TRUE) AND at_s AND POSSIBLE [s] (TRUE) AND hungry_m AND at_g AND POSSIBLE [g] (TRUE) AND at_c AND POSSIBLE [c] (TRUE), POST = {-hungry_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)}),
(g,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)})
} 
 DELEDGES = {
 (s,{-(1,1)})
} ,
DES = {1}}), 
m, c20),
CAPABILITY = (( m_eats_s__c = { 
EVENTS = { 
1 = ( PRE = predator_m_s AND -friends_s_m AND at_m AND POSSIBLE [m] (TRUE) AND at_s AND POSSIBLE [s] (TRUE) AND hungry_m AND at_c AND POSSIBLE [c] (TRUE), POST = {-hungry_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)}),
(c,{-(1,1),-(2,2)}),
(g,{-(1,2),-(2,2)})
} 
 DELEDGES = {
 (s,{-(1,1)})
} ,
DES = {1}}), 
m, c20),
CAPABILITY = (( m_eats_s__c = { 
EVENTS = { 
1 = ( PRE = predator_m_s AND -friends_s_m AND at_m AND POSSIBLE [m] (TRUE) AND at_s AND POSSIBLE [s] (TRUE) AND hungry_m, POST = {-hungry_m}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(m,{-(1,1),-(2,2)}),
(s,{-(1,1),-(2,2)}),
(g,{-(1,2),-(2,2)}),
(c,{-(1,2),-(2,2)})
} 
 DELEDGES = {
 (s,{-(1,1)})
} ,
DES = {1}}), 
m, c20),
// {m} < {g,c} < {s}
//PROPS : {at_m, at_g, at_f, at_o, th_m, th_f, th_g, th_o, friends_m_g, friends_f_g, friends_m_f, friends_m_o, friends_o_g, predator_g_m, predator_g_f, predator_f_m, predator_o_m, predator_g_o, moon, big, bad, valid}.

//replacing alive_i atoms with POSSIBLE [i] (TRUE) statements. 
// working with smaller set of agents
AGENTS : {m, g, c, s}.

// initial model description starts here
// downgrading g is same as upgrading m in this version
// world 1 doesnot have M
// world 2 has M

MODEL : 
{ NODES = {
(1,{at_m, -at_g, at_c, -at_s, th_m, -th_g, -th_c, -th_s, -friends_m_g, -friends_m_c, -friends_m_s, -friends_c_s, -friends_g_s, predator_g_m, predator_c_m, -predator_s_m, -predator_s_g, -predator_s_c, -hungry_s, hungry_g, hungry_c, hungry_m}),
(2,{at_m, -at_g, at_c, at_s, th_m, -th_g, th_c, -th_s, -friends_m_g, -friends_m_c, -friends_m_s, -friends_c_s, -friends_g_s, predator_g_m, predator_c_m, predator_s_m, predator_s_g, predator_s_c, -hungry_s, hungry_g, hungry_c, hungry_m})
},  
EDGES = {
(m,{-(1,1), -(2,2)}),
(c,{-(1,1), -(2,2)}),
(g,{-(1,2), -(2,2)}),
(s,{-(2,2)})
},
DES = {1}
}.

//action description starts here

ACTIONS : {
CAPABILITY = (( c_flee__m = { 
EVENTS = { 
1 = ( PRE = BELIEVES [c] (th_c) AND at_c AND POSSIBLE [c] (TRUE) AND at_m AND POSSIBLE [m] (TRUE), POST = {-at_c}), 
2 = ( PRE = (TRUE) , POST = {nil} ) 
}, 
EDGES = { 
(c,{-(1,1),-(2,2)}),
(m,{-(1,1),-(2,2)}),
(g,{-(1,2),-(2,2)}),
(s,{-(1,2),-(2,2)})
},
DES = {1}}), 
c, c5),

// deceptive

CAPABILITY = (( fake-create_s_by_m_for__c__all_at = { 

EVENTS = { 
1 = ( PRE = POSSIBLE [m] (NOT (POSSIBLE [s] (TRUE))) AND NOT POSSIBLE [m] (POSSIBLE [c] (POSSIBLE [s] (TRUE))) AND at_m AND POSSIBLE [m] (TRUE) AND at_c AND POSSIBLE [c] (TRUE) AND predator_c_m AND predator_g_m, POST = {nil} ),
2 = ( PRE = at_m AND POSSIBLE [m] (TRUE) AND at_c AND POSSIBLE [c] (TRUE) AND predator_g_m AND predator_c_m, POST = {at_s, predator_s_m, predator_s_g, predator_s_c} ),
3 = ( PRE = TRUE, POST = {nil} )
},
 
EDGES = {
(m,{-(1,1),-(2,2),-(3,3)}),
(g,{-(1,3),-(2,3),-(3,3)}),
(c,{-(1,2),-(2,2),-(3,3)}),
(s,{-(1,3),-(2,3),-(3,3)})
}

//no commas please

SUMEDGES = {
(s,{-(2,2)})
}
,
DES = {1}}), 
m, c3)

}.

IACTIONS : {

( infer_th_m = { 

EVENTS = { 
1 = ( PRE = at_m AND POSSIBLE [m] (TRUE) AND at_c AND POSSIBLE [c] (TRUE) AND predator_c_m AND -friends_m_c, POST = {th_m} ),
2 = ( PRE = NOT (at_m AND POSSIBLE [m] (TRUE) AND at_c AND POSSIBLE [c] (TRUE) AND predator_c_m AND -friends_m_c), POST = {-th_m} )
},
EDGES = {
(c,{-(1,1), -(1,2), -(2,1), -(2,2)}),
(m,{-(1,1), -(1,2), -(2,1), -(2,2)}),
(s,{-(1,1), -(1,2), -(2,1), -(2,2)}),
(g,{-(1,1), -(1,2), -(2,1), -(2,2)})
}
,

DES = {1,2}}), 

( infer_th_c = { 

EVENTS = { 
1 = ( PRE = at_c AND POSSIBLE [c] (TRUE) AND at_s AND POSSIBLE [s] (TRUE) AND predator_s_c AND -friends_c_s, POST = {th_c} ),
2 = ( PRE = NOT (at_c AND POSSIBLE [c] (TRUE) AND at_s AND POSSIBLE [s] (TRUE) AND predator_s_c AND -friends_c_s), POST = {-th_c} )
},
EDGES = {
(c,{-(1,1), -(1,2), -(2,1), -(2,2)}),
(m,{-(1,1), -(1,2), -(2,1), -(2,2)}),
(s,{-(1,1), -(1,2), -(2,1), -(2,2)}),
(g,{-(1,1), -(1,2), -(2,1), -(2,2)})
}
,

DES = {1,2}})

}.

//GOAL : BELIEVES [m] (-th_m  AND -th_f AND BELIEVES [f] (th_f)).
//GOAL : BELIEVES [m] (-th_m) AND BELIEVES [f] (-th_f) AND BELIEVES [f] (at_g) AND BELIEVES [m] (-at_g).
GOAL : -th_m.
//GOAL : BELIEVES [m] (-th_m AND -th_f) AND BELIEVES [f] (-th_m AND -th_f).

PLANNER : {m} .
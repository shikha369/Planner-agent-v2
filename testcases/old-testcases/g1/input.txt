PROPS : {p} .

AGENTS : {m, f, o} .

MODEL : 
{ NODES = {(1,{p})} ,  
EDGES = {(m,{-(1,1)}),(f,{-(1,1)}),(o,{-(1,1)})},
DES = {1}
} .

ACTIONS : {

CAPABILITY = (( dcv_add_g_by_m_for_f = { 

EVENTS = { 
1 = ( PRE = TRUE , POST = {nil} ),  
2 = ( PRE = TRUE , POST = {nil} ),
3 = ( PRE = TRUE , POST = {nil} )
},
 
EDGES = {
(m,{-(1,1),-(2,2),-(3,3)}),
(f,{-(1,2),-(2,2),-(3,3)}),
(o,{-(1,3),-(2,3),-(3,3)})
}

//no commas please

SUMEDGES = {
(g,{-(2,2)})
}
,

DES = {1}}), 
m, test),

CAPABILITY = (( make_p_false = { 

EVENTS = { 
1 = ( PRE = p , POST = {-p} )
},
 
EDGES = {
(m,{-(1,1)}),
(f,{-(1,1)}),
(o,{-(1,1)}),
(g,{-(1,1)})
}
,

DES = {1}}), 
m, test),

CAPABILITY = (( dcv_add_g_by_m_for_o = { 

EVENTS = { 
1 = ( PRE = TRUE , POST = {nil} ),  
2 = ( PRE = TRUE , POST = {nil} ),
3 = ( PRE = TRUE , POST = {nil} )
},
 
EDGES = {
(m,{-(1,1),-(2,2),-(3,3)}),
(o,{-(1,2),-(2,2),-(3,3)}),
(f,{-(1,3),-(2,3),-(3,3)}),
(g,{-(3,3)})
}

//no commas please

SUMEDGES = {
(g,{-(2,2)})
}
,

DES = {1}}), 
m, test1)
}.

//GOAL : POSSIBLE [f] (POSSIBLE [g] (p AND TRUE)) AND (POSSIBLE [o] (POSSIBLE [f] NOT POSSIBLE [g] (p AND TRUE))).
GOAL : POSSIBLE [f] (POSSIBLE [g] (-p AND TRUE)) AND POSSIBLE [o] (POSSIBLE [g] (-p AND TRUE)).

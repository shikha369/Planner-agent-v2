 
//agents: a,b,c
//fluents: secret, ar1, ar2, ar3, ar4, br1, br2, br3, br4, cr1, cr2, cr3, cr4
//secret can be sensed in r4 only

PROPS : {secret, ar1, ar2, ar3, ar4, br1, br2, br3, br4, cr1, cr2, cr3, cr4} .

AGENTS : {a, b, c} .

MODEL : { 
    NODES = {
        (1,{secret, ar1, -ar3, -ar2, -ar4, -br1, -br2, br3, -br4, -cr1, cr2, -cr3, -cr4}), 
        (2,{-secret, ar1, -ar3, -ar2, -ar4, -br1, -br2, br3, -br4, -cr1, cr2, -cr3, -cr4})
        },  
    EDGES = {
        (a,{-(1,1),-(1,2),-(2,1),-(2,2)}),
        (b,{-(1,1),-(1,2),-(2,1),-(2,2)}),
        (c,{-(1,1),-(1,2),-(2,1),-(2,2)})
        }, 
    DES = {1}} .

ACTIONS : {

CAPABILITY = (( b_sense_sec = { 
    EVENTS = { 
        1 = ( PRE =  (NOT (B [b] (secret) AND B [b] (-secret)) AND (br4 AND secret)), POST = {nil} ) , 
        2 = ( PRE =  (NOT (B [b] (secret) AND B [b] (-secret)) AND (br4 AND -secret)), POST = {nil} ) , 
        3 = ( PRE = (TRUE) , POST = {nil} )  }, 
    EDGES = {
        (a,{ -(1,3), -(1,3), -(3,3)}),
        (b,{ -(1,1), -(2,2), -(3,3)}), 
        (c,{ -(1,3), -(1,3), -(3,3)})
        }, 
    DES = {1,2} }), 
    b, b_finds_that_the_secret_is_true_and_for_others_nothing_happened),

//--

CAPABILITY = (( a_sense_sec = { 
    EVENTS = { 
        1 = ( PRE =  (NOT (B [a] (secret) AND B [a] (-secret)) AND (ar4 AND secret)), POST = {nil} ) , 
        2 = ( PRE =  (NOT (B [a] (secret) AND B [a] (-secret)) AND (ar4 AND -secret)), POST = {nil} ) , 
        3 = ( PRE = (TRUE) , POST = {nil} )  }, 
    EDGES = {
        (b,{ -(1,3), -(2,3), -(3,3)}),
        (a,{ -(1,1), -(2,2), -(3,3)}), 
        (c,{ -(1,3), -(2,3), -(3,3)})
        }, 
    DES = {1,2} }), 
    a, a_finds_that_the_secret_is_true_and_for_others_nothing_happened),

CAPABILITY = (( c_sense_sec = { 
    EVENTS = { 
        1 = ( PRE =  (NOT (B [c] (secret) AND B [c] (-secret)) AND (cr4 AND secret)), POST = {nil} ) , 
        2 = ( PRE =  (NOT (B [c] (secret) AND B [c] (-secret)) AND (cr4 AND -secret)), POST = {nil} ) , 
        3 = ( PRE = (TRUE) , POST = {nil} )  }, 
    EDGES = {
        (b,{ -(1,3), -(2,3), -(3,3)}),
        (c,{ -(1,1), -(2,2), -(3,3)}), 
        (a,{ -(1,3), -(2,3), -(3,3)})
        }, 
    DES = {1,2} }), 
    c, c_finds_that_the_secret_is_true_and_for_others_nothing_happened),

//--

CAPABILITY = (( b_mov_left = { 
    EVENTS = { 
        1 = ( PRE = (br2)  , POST = {br1, -br2} ), 
        2 = ( PRE =  (br1), POST = {br4, -br1} ), 
        3 = ( PRE = (br4) , POST = {br3, -br4} ), 
        4 = ( PRE = (br3) , POST = {br2, -br3} )}, 
    EDGES ={(a,{-(1,1),-(2,2),-(3,3),-(4,4)}), (b,{-(1,1),-(2,2),-(3,3),-(4,4)}), (c,{-(1,1),-(2,2),-(3,3),-(4,4)})}, 
    DES = {1,2,3,4} }), b, b_moves_left),

CAPABILITY = (( b_mov_right = { 
    EVENTS = { 
        1 = ( PRE = (br2)  , POST = {br3, -br2} ), 
        2 = ( PRE =  (br3), POST = {br4, -br3} ), 
        3 = ( PRE = (br4) , POST = {br1, -br4} ), 
        4 = ( PRE =  (br1), POST = {br2, -br1} )}, 
    EDGES ={(a,{-(1,1),-(2,2),-(3,3),-(4,4)}), (b,{-(1,1),-(2,2),-(3,3),-(4,4)}), (c,{-(1,1),-(2,2),-(3,3),-(4,4)})}, 
    DES = {1,2,3,4} }), b, b_moves_right),


//CAPABILITY = (( a_announce_secret = { EVENTS = { 1 = ( PRE = (B [a] (secret) AND (NOT (B [b] (secret))) AND ar4 AND br4)  , POST = {nil} ), 2 = ( PRE = (secret AND (NOT (B [b] (secret))) AND ar4 AND br4)  , POST = {nil} ), 3 = ( PRE =  (ar4 AND br4), POST = {nil} ), 4 = ( PRE = (B [a] (secret) AND (NOT (B [b] (secret))) AND ar1 AND br1)  , POST = {nil} ), 5 = ( PRE = (secret AND (NOT (B [b] (secret))) AND ar1 AND br1)  , POST = {nil} ), 6 = ( PRE =  (ar1 AND br1), POST = {nil} ), 7 = ( PRE = (B [a] (secret) AND (NOT (B [b] (secret))) AND ar2 AND br2)  , POST = {nil} ), 8 = ( PRE = (secret AND (NOT (B [b] (secret))) AND ar2 AND br2)  , POST = {nil} ), 9 = ( PRE =  (ar2 AND br2), POST = {nil} )}, EDGES ={(a,{1=(1,1),2=(2,2),3=(3,3),4=(4,4),5=(5,5),6=(6,6),7=(7,7),8=(8,8),9=(9,9)}), (b,{1=(1,2),2=(2,2),3=(3,3),4=(4,5),5=(5,5),6=(6,6),7=(7,8),8=(8,8),9=(9,9)}), (c,{1=(1,3),2=(2,3),3=(3,3),4=(4,6),5=(5,6),6=(6,6),7=(7,9),8=(8,9),9=(9,9)}), (d,{1=(1,3),2=(2,3),3=(3,3),4=(4,6),5=(5,6),6=(6,6),7=(7,9),8=(8,9),9=(9,9)})}, DES = {1,4,7} }), a, a_tells_b_rest_are_uncertain),

CAPABILITY = (( b_announce_secret_a_c_obliv = { EVENTS = {
1 = ( PRE = (B [b] (secret) AND B[b] (NOT B[a] (secret) AND NOT B[a] (-secret)) AND ( (ar1 AND br1 AND -cr1) OR (ar2 AND br2 AND -cr2) OR (ar3 AND br3 AND -cr3) OR (ar4 AND br4 AND -cr4) ))  , POST = {nil} ), 
2 = ( PRE = (secret AND ( (ar1 AND br1 AND -cr1) OR (ar2 AND br2 AND -cr2) OR (ar3 AND br3 AND -cr3) OR (ar4 AND br4 AND -cr4) ))  , POST = {nil} ), 
3 = ( PRE = TRUE , POST = {nil} )
}, 
EDGES ={
(a,{-(1,2), -(2,2), -(3,3)}), 
(b,{-(1,1), -(2,2), -(3,3)}), 
(c,{-(1,3), -(2,3), -(3,3)})
}, 
DES = {1} }), b, b_announce_secret_a_c_obliv),

CAPABILITY = (( b_announce_secret_c_a_obliv = { EVENTS = {
1 = ( PRE = (B [b] (secret) AND B[b] (NOT B[c] (secret) AND NOT B[c] (-secret)) AND ( (-ar1 AND br1 AND cr1) OR (-ar2 AND br2 AND cr2) OR (-ar3 AND br3 AND cr3) OR (-ar4 AND br4 AND cr4) ))  , POST = {nil} ), 
2 = ( PRE = (secret AND ( (-ar1 AND br1 AND cr1) OR (-ar2 AND br2 AND cr2) OR (-ar3 AND br3 AND cr3) OR (-ar4 AND br4 AND cr4) ))  , POST = {nil} ), 
3 = ( PRE = TRUE , POST = {nil} )
}, 
EDGES ={
(c,{-(1,2), -(2,2), -(3,3)}), 
(b,{-(1,1), -(2,2), -(3,3)}), 
(a,{-(1,3), -(2,3), -(3,3)})
}, 
DES = {1} }), b, b_announce_secret_a_c_obliv),

CAPABILITY = (( b_announce_secret_ca = { EVENTS = {
1 = ( PRE = (B [b] (secret) AND B[b] (NOT B[c] (secret) AND NOT B[c] (-secret)) AND B[b] (NOT B[a] (secret) AND NOT B[a] (-secret)) AND ( (ar1 AND br1 AND cr1) OR (ar2 AND br2 AND cr2) OR (ar3 AND br3 AND cr3) OR (ar4 AND br4 AND cr4) ))  , POST = {nil} ), 
2 = ( PRE = (secret AND ( (ar1 AND br1 AND cr1) OR (ar2 AND br2 AND cr2) OR (ar3 AND br3 AND cr3) OR (ar4 AND br4 AND cr4) ))  , POST = {nil} )
}, 
EDGES ={
(c,{-(1,2), -(2,2)}), 
(b,{-(1,1), -(2,2)}), 
(a,{-(1,2), -(2,2)})
}, 
DES = {1} }), b, b_announce_secret_ca)

}.

//write action such that b announces it in any room and people present in that would know the truth value


GOAL : ( B[b] (B [a] (secret) AND NOT B [c] (secret))).
// GOAL : (B [b] ( B [a] (secret))).
//GOAL :  B[b] (secret).

PLANNER : {b} .